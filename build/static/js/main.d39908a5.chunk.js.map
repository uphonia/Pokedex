{"version":3,"sources":["pages/Home.js","context.js","components/Search.js","data.js","components/SinglePokemonTab.js","components/Loading.js","components/PokeInfo.js","components/Filter.js","components/PageNav.js","pages/Pokedex.js","pages/TypeChart.js","components/Sidebar.js","components/SinglePokemonPage.js","App.js","index.js"],"names":["Home","react_default","a","createElement","Fragment","className","href","alt","src","AppContext","React","createContext","AppProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","loadingText","setLoadingText","_useState5","_useState6","pageNum","setPageNum","_useState7","Math","ceil","_useState8","maxPageNum","setMaxPageNum","_useState9","_useState10","numSet","setNumSet","_useState11","_useState12","maxSets","setMaxSets","_useState13","toConsumableArray","Array","keys","slice","_useState14","idList","setIdList","_useState15","_useState16","startFetchID","setStartFetchID","_useState17","_useState18","maxPageNumOnPage","setMaxPageNumOnPage","_useState19","_useState20","loading","setLoading","Provider","value","capitilize","str","toUpperCase","useGlobalContext","useContext","Search","_useGlobalContext","searchValue","useRef","useEffect","current","focus","onSubmit","e","preventDefault","type","ref","placeholder","typeData","fire","normal","fighting","poison","ground","rock","bug","ghost","steel","water","grass","electric","psychic","ice","dragon","dark","fairy","flying","regionDexNums","kanto","start","end","johto","hoenn","sinnoh","unova","kalos","alola","galar","SinglePokemonTab","id","image","name","types","key","react_router_dom","to","concat","map","index","style","backgroundColor","Loading","text","url","PokeInfo","pokeList","setPokeList","_doSearch","asyncToGenerator","regenerator_default","mark","_callee","response","data","list","wrap","_context","prev","next","abrupt","fetch","sent","json","push","abilities","height","weight","sprites","front_default","species","console","log","t0","stop","apply","this","arguments","_forFetch","_callee2","fetches","i","_context2","Promise","all","then","doSearch","forFetch","components_Loading","sort","b","entry","components_SinglePokemonTab","assign","typeURL","Filter","regionList","setRegionList","typeList","setTypeList","fill","regionState","setRegionState","typeState","setTypeState","fetchRegions","results","region","fetchTypes","_ref2","_handleRegionChange","_callee4","position","updatedRegionState","_context4","item","_handleTypeChange","_callee5","updatedTypeState","_context5","range","size","inBoundary","boundaries","length","setFilters","_ref3","_callee3","lowest","highest","newIdList","_i","fetchTyping","fetchTypingData","pokeTypeList","j","pokeURL","idFetch","idFetchData","pokeID","_i2","regionIDs","_context3","pokemon","t1","onChange","_x","handleRegionChange","checked","htmlFor","filter","_x2","handleTypeChange","onClick","PageNav","currentPage","setCurrentPage","maxOnPage","pages","setPages","getPage","event","num","target","innerHTML","tempMaxPageNum","newPagesList","newMaxPageNum","parseInt","Pokedex","components_Search","components_Filter","components_PageNav","components_PokeInfo","TypeChart","Sidebar","exact","activeStyle","textDecoration","SinglePokemon","useParams","flavorTexts","setFlavorTexts","pokemonInfo","setPokemonInfo","_getPokemon","getPokemon","fetchFlavorText","flavor_text_entries","ability","language","flavor_text","getFlavorText","App","components_Sidebar","react_router","path","pages_Home","pages_Pokedex","SinglePokemonPage","pages_TypeChart","ReactDOM","render","StrictMode","context_AppProvider","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d39908a5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"home-title\">\n\t\t\t\t<h1> Welcome! </h1>\n\t\t\t</div>\n\t\t\t<div className=\"description\">\n\t\t\t\t<p>This is a personal project on something I am passionate about -- Pokemon. I'm a long-time fan of the Pokemon franchise and I thought doing a project on it would be a fun idea. I gained a lot of inspiration from <a href=\"https://bulbapedia.bulbagarden.net/wiki/Main_Page\"><u>Bulbapedia</u></a>, a site I use very often when I play the games. This is my rendition of it, keeping things nice and simple for anyone to use.</p>\n\t\t\t\t<p>Things are still a work in progress, but I hope you can follow along my journey in building this project!</p>\n\t\t\t</div>\n\t\t\t<div className=\"stock-img\">\n\t\t\t\t<img alt=\"pokeball\" src=\"../pokeball2.png\"/>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Home\n","import React, {useState, useContext} from 'react'\n\nconst AppContext = React.createContext()\nconst url = \"https://pokeapi.co/api/v2/\"\n\nconst AppProvider = ({children}) => {\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\n\tconst [loadingText, setLoadingText] = useState(\"Loading...\");\n\n\t// page navigation states\n\tconst [pageNum, setPageNum] = useState(1);\n\tconst [maxPageNum, setMaxPageNum] = useState(Math.ceil(898/15));\n\tconst [numSet, setNumSet] = useState(1);\n\tconst [maxSets, setMaxSets] = useState(Math.ceil(898/225));\n\n\tconst [idList, setIdList] = useState([...new Array(899).keys()].slice(1))\n\tconst [startFetchID, setStartFetchID] = useState(1);\n\n\tconst [maxPageNumOnPage, setMaxPageNumOnPage] = useState(15);\n\n\t// loading state\n\tconst [loading, setLoading] = useState(true);\n\n\tconst capitilize = (str) => {\n\t\treturn str[0].toUpperCase() + str.slice(1);\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={{\n\t\t\tsetSearchTerm, searchTerm, capitilize, pageNum, setPageNum, numSet, setNumSet, maxSets, setMaxSets, maxPageNumOnPage, setMaxPageNumOnPage, idList, setIdList, startFetchID, setStartFetchID, setMaxPageNum, maxPageNum, loading, setLoading, loadingText, setLoadingText\n\t\t}}>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t)\n}\n\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext)\n}\n\nexport {AppContext, AppProvider}\n","import React from 'react'\nimport { useGlobalContext } from '../context'\n\nconst Search = () => {\n\tconst {setSearchTerm, setLoading} = useGlobalContext();\n\tconst searchValue = React.useRef('');\n\n\tReact.useEffect(() => {\n\t\tsearchValue.current.focus();\n\t}, [])\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tsetSearchTerm(searchValue.current.value);\n\t\tsearchValue.current.value = \"\";\n\t\tsetLoading(true);\n\t}\n\n\treturn (\n\t\t<div className=\"search-container\">\n\t\t\t<form className=\"search-form\" onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={searchValue}\n\t\t\t\t\tplaceholder=\"Search by name or ID\"/>\n\t\t\t\t<button className=\"search-btn\">\n\t\t\t\t\tSearch\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Search\n","export const typeData = {\n    \"fire\": \"#F08030\",\n    \"normal\": \"#A8A878\",\n    \"fighting\": \"#C03028\",\n    \"poison\": \"#9f61c1\",\n    \"ground\": \"#E0C068\",\n    \"rock\": \"#B8A038\",\n    \"bug\": \"#A8B820\",\n    \"ghost\": \"#705898\",\n    \"steel\": \"#B8B8D0\",\n    \"water\": \"#6890F0\",\n    \"grass\": \"#78C850\",\n    \"electric\": \"#F8D030\",\n    \"psychic\": \"#F85888\",\n    \"ice\": \"#98D8D8\",\n    \"dragon\": \"#7038F8\",\n    \"dark\": \"#705848\",\n    \"fairy\": \"#EE99AC\",\n    \"flying\": \"#ceaee3\"\n}\n\nexport const typeIndex = {\n    0:\"fire\",\n    1:\"normal\",\n    2:\"fighting\",\n    3:\"poison\",\n    4:\"ground\",\n    5:\"rock\",\n    6:\"bug\",\n    7:\"ghost\",\n    8:\"steel\",\n    9:\"water\",\n    10:\"grass\",\n    11:\"electric\",\n    12:\"psychic\",\n    13:\"ice\",\n    14:\"dragon\",\n    15:\"dark\",\n    16:\"fairy\",\n    17:\"flyingtype\"\n}\n\nexport const regionDexNums = {\n    \"kanto\" : {start:1, end:151},\n    \"johto\" : {start:152, end:251},\n    \"hoenn\" : {start:252, end:386},\n    \"sinnoh\" : {start:387, end:493},\n    \"unova\" : {start:494, end:649},\n    \"kalos\" : {start:650, end:721},\n    \"alola\" : {start:722, end:809},\n    \"galar\" : {start:810, end:898},\n}\n","import React from 'react'\nimport { useGlobalContext } from '../context'\nimport { typeData } from '../data'\nimport { Link } from 'react-router-dom'\n\nconst SinglePokemonTab = ({id, image, name, types}) => {\n\tconst {capitilize} = useGlobalContext();\n\n\treturn (\n\t\t<li key={id} className=\"pokeinfo-tab\">\n\t\t\t<div className=\"id-container\">#{id}</div>\n\t\t\t<div className=\"thumbnail-container\">\n\t\t\t\t<img className=\"thumbnail\" alt={name} src={image}/>\n\t\t\t</div>\n\t\t\t<div className=\"name-container\">\n\t\t\t\t<Link to={`/pokedex/${name}`}>\n\t\t\t\t\t{capitilize(name)}\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<div className=\"type-container\">\n\t\t\t\t{types.map((type, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} className=\"type-box\" style={{backgroundColor:`${typeData[type.type.name]}`}}>\n\t\t\t\t\t\t\t{capitilize(type.type.name)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</li>\n\t)\n}\n\nexport default SinglePokemonTab\n","import React from 'react'\n\nconst Loading = ({text}) => {\n    return (\n        <div className=\"loading\">\n            {text}\n        </div>\n    )\n}\n\nexport default Loading\n","import React, {useState, useEffect} from 'react'\nimport { useGlobalContext } from '../context'\nimport SinglePokemonTab from '../components/SinglePokemonTab'\nimport Loading from '../components/Loading'\n\nconst url = \"https://pokeapi.co/api/v2/pokemon\"\n\nconst PokeInfo = () => {\n\tconst {pageNum, idList, startFetchID, loading, setLoading, searchTerm, loadingText, setLoadingText} = useGlobalContext();\n\n\t// list of pokemon to show\n\tconst [pokeList, setPokeList] = useState([]);\n\n\tasync function doSearch() {\n\t\tif (searchTerm === \"\") return;\n\t\ttry {\n\t\t\tconst response = await fetch(`${url}/${searchTerm}`);\n\t\t\tconst data = await response.json();\n\t\t\tlet list = [];\n\t\t\tlist.push({abilities:data.abilities, name:data.name, id:data.id, height:data.height, weight:data.weight, types:data.types, image:data.sprites.front_default, species:data.species.url})\n\t\t\tconsole.log(data, list)\n\t\t\tsetPokeList(list);\n\t\t\tsetLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"error\", error)\n\t\t\tsetLoadingText(\"No matching results.\");\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tdoSearch();\n\t\treturn () => {}\n\t}, [searchTerm])\n\n\tasync function forFetch() {\n\t\tlet fetches = [];\n\t\tfor (let i = startFetchID-1; i < startFetchID+15-1; i++) {\n\t\t\tif (idList[i]) {\n\t\t\t\tfetches.push(`${url}/${idList[i]}`);\n\t\t\t}\n\t\t}\n\t\tlet list = [];\n\n\t\ttry {\n\t\t\tawait Promise.all(fetches.map(url => fetch(url)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tlist.push({abilities:data.abilities, name:data.name, id:data.id, height:data.height, weight:data.weight, types:data.types, image:data.sprites.front_default, species:data.species.url})\n\t\t\t\t})\n\t\t\t))\n\t\t} catch (error) {}\n\t\tsetPokeList(list);\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tforFetch();\n\t\treturn () => {}\n\t}, [pageNum, idList])\n\n\tif (loading) {\n\t\treturn <Loading text={loadingText}/>\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"pokelist-container\">\n\t\t\t\t<ul>\n\t\t\t\t\t{pokeList ? pokeList\n\t\t\t\t\t\t.sort((a, b) => a.id > b.id)\n\t\t\t\t\t\t.map((entry) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SinglePokemonTab key={entry.id} {...entry}/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}): \"No matching entries.\"}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PokeInfo\n","import React, {useState, useEffect} from 'react'\nimport { useGlobalContext } from '../context'\n\nimport { regionDexNums } from '../data'\nconst regionURL = \"https://pokeapi.co/api/v2/region/\"\nconst typeURL = \"https://pokeapi.co/api/v2/type\"\n\nconst Filter = () => {\n\tconst {capitilize, setIdList, setMaxPageNum, setMaxSets, setLoading, setLoadingText} = useGlobalContext();\n\tconst [regionList, setRegionList] = useState([]);\n\tconst [typeList, setTypeList] = useState([]);\n\n\t// regionList and typeList length are hard-coded for nw\n\tconst [regionState, setRegionState] = useState(new Array(8).fill(false, 0, 8));\n\tconst [typeState, setTypeState] = useState(new Array(18).fill(false, 0, 18));\n\n\tconst fetchRegions = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${regionURL}`);\n\t\t\tconst data = await response.json();\n\t\t\tconst list = data.results.map((region) => {\n\t\t\t\treturn region.name\n\t\t\t});\n\t\t\tsetRegionList(list);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchRegions();\n\t\tfetchTypes();\n\t\treturn () => {}\n\t},[])\n\n\tconst fetchTypes = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${typeURL}`);\n\t\t\tconst data = await response.json();\n\t\t\tconst list = data.results.map((type) => {\n\t\t\t\treturn type.name\n\t\t\t});\n\t\t\tsetTypeList(list);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync function handleRegionChange(position) {\n\t\tconst updatedRegionState = regionState.map((item, index) => {\n\t\t\treturn index === position ? !item : item\n\t\t})\n\t\tsetRegionState(updatedRegionState)\n\t}\n\n\tasync function handleTypeChange(position) {\n\t\tconst updatedTypeState = typeState.map((item, index) => {\n\t\t\treturn index === position ? !item : item\n\t\t})\n\t\tsetTypeState(updatedTypeState)\n\t}\n\n\tconst range = (size, start) => {\n\t\treturn [...Array(size).keys()].map(i => i + start)\n\t}\n\n\tfunction inBoundary(id, boundaries) {\n\t\tfor (let i = 0; i < boundaries.length; i++) {\n\t\t\tconsole.log(id, boundaries[i].start, boundaries[i].end)\n\t\t\tif (id >= boundaries[i].start && id <= boundaries[i].end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// set filters selected by user\n\tconst setFilters = async () => {\n\t\tsetLoading(true);\n\t\tsetLoadingText(\"Loading...\");\n\t\t// get all boundaries for regions\n\t\tlet boundaries = [];\n\t\tlet lowest = 898;\n\t\tlet highest = 0;\n\t\tfor (let i = 0; i < regionState.length; i++) {\n\t\t\tif (regionState[i] === true) {\n\t\t\t\tconst entry = regionDexNums[regionList[i]];\n\t\t\t\tboundaries.push(entry);\n\t\t\t\tif (entry.start < lowest) lowest = entry.start;\n\t\t\t\tif (entry.end > highest) highest = entry.end;\n\t\t\t}\n\t\t}\n\n\t\tlet newIdList = [];\n\t\t// get all IDs of pokemon with specific typing selected\n\t\tfor (let i = 0; i < typeState.length; i++) {\n\t\t\tif (typeState[i] === true) {\n\t\t\t\tconst type = typeList[i];\n\t\t\t\t// get all pokemon with this type\n\t\t\t\ttry {\n\t\t\t\t\tconst fetchTyping = await fetch(`${typeURL}/${type}`);\n\t\t\t\t\tconst fetchTypingData = await fetchTyping.json();\n\t\t\t\t\tconst pokeTypeList = fetchTypingData.pokemon;\n\t\t\t\t\tfor (let j = 0; j < pokeTypeList.length; j++) {\n\t\t\t\t\t\tconst pokeURL = pokeTypeList[j].pokemon.url;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst idFetch = await fetch(pokeURL);\n\t\t\t\t\t\t\tconst idFetchData = await idFetch.json();\n\t\t\t\t\t\t\tconst pokeID = idFetchData.id;\n\t\t\t\t\t\t\tif (pokeID >= lowest && pokeID <= highest) {\n\t\t\t\t\t\t\t\tif (inBoundary(pokeID, boundaries) === true) {\n\t\t\t\t\t\t\t\t\tnewIdList.push(pokeID);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {console.log(error)}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// do only region handling if no type is being filtered\n\t\tif (newIdList.length === 0) {\n\t\t\t// get all regions we want and add to idList\n\t\t\tfor (let i = 0; i < regionState.length; i++) {\n\t\t\t\tif (regionState[i] === true) {\n\t\t\t\t\tconst region = regionList[i]; // get name of region\n\t\t\t\t\tconst start = regionDexNums[region].start;\n\t\t\t\t\tconst end = regionDexNums[region].end;\n\t\t\t\t\tconst regionIDs = range(end-start+1, start);\n\t\t\t\t\tnewIdList = newIdList.concat(regionIDs);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newIdList.length === 0) {\n\t\t\tnewIdList = [...new Array(899).keys()].slice(1)\n\t\t}\n\t\tsetIdList(newIdList);\n\t\tsetMaxPageNum(Math.ceil(newIdList.length/15));\n\t\tsetMaxSets(Math.ceil(newIdList.length/225));\n\t}\n\n\treturn (\n\t\t<div className=\"filter-container\">\n\t\t\t<div className=\"filter-expand\" id=\"region-expand\">\n\t\t\t\tRegion Filter\n\t\t\t</div>\n\t\t\t<div className=\"table-container\" id=\"region-table\">\n\t\t\t\t<ul>\n\t\t\t\t\t{regionList.map((region, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tonChange={() => handleRegionChange(index)}\n\t\t\t\t\t\t\t\t\tchecked={regionState[index]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor={region}>\n\t\t\t\t\t\t\t\t\t{capitilize(region)}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"filter-expand\" id=\"type-expand\">\n\t\t\t\tType Filter\n\t\t\t</div>\n\t\t\t<div className=\"table-container\" id=\"type-table\">\n\t\t\t\t<ul>\n\t\t\t\t\t{typeList.filter((type) => {\n\t\t\t\t\t\treturn (type !== \"unknown\" && type !== \"shadow\");\n\t\t\t\t\t}).map((type, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tonChange={() => handleTypeChange(index)}\n\t\t\t\t\t\t\t\t\tchecked={typeState[index]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor={type}>\n\t\t\t\t\t\t\t\t\t{capitilize(type)}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"submit-container\">\n\t\t\t\t<button className=\"filter-btn\" onClick={setFilters}>\n\t\t\t\t\tSet Filters\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Filter\n","import React, {useState, useEffect} from 'react'\nimport { useGlobalContext } from '../context'\n\nconst maxOnPage = 15;\n\nconst PageNav = () => {\n    const {maxPageNum, pageNum, setPageNum, numSet, setNumSet, maxSets, setMaxPageNumOnPage, setStartFetchID, idList, setLoading} = useGlobalContext();\n\n    // set current page number active and keep track\n    const [currentPage, setCurrentPage] = useState(1);\n\n    // sets page numbers to display\n    const [pages, setPages] = useState([...new Array(maxOnPage+1).keys()].slice(1))\n\n    const prevSet = () => {\n        if (numSet !== 1) {\n            setNumSet(numSet-1);\n        }\n    }\n    const nextSet = () => {\n        if (numSet !== maxSets) {\n            setNumSet(numSet+1);\n        }\n    }\n\n    const prevPage = () => {\n        if (pageNum !== 1) {\n            setPageNum(parseInt(pageNum)-1);\n            setStartFetchID((parseInt(pageNum)-2)*15+1);\n            setLoading(true);\n            setCurrentPage(parseInt(pageNum)-1);\n        }\n    }\n    const nextPage = () => {\n        if (pageNum !== maxPageNum) {\n            setPageNum(parseInt(pageNum)+1);\n            setStartFetchID(parseInt(pageNum)*15+1);\n            setLoading(true);\n            setCurrentPage(parseInt(pageNum)+1);\n        }\n    }\n\n    const getPage = (event) => {\n        const num = event.target.innerHTML;\n        setPageNum(num);\n        setStartFetchID((num-1)*15+1);\n        setLoading(true);\n        setCurrentPage(num);\n    }\n\n    // call when user is going to the next or prev set of pages\n    useEffect(() => {\n        const tempMaxPageNum = Math.ceil(idList.length/15);\n        let newPagesList = [];\n        const newMaxPageNum = numSet*15;\n        for (let i = newMaxPageNum-14; i <= newMaxPageNum; i++) {\n            if (i <= tempMaxPageNum) {\n                newPagesList.push(i); // pushing index(i) in range\n            }\n        }\n        setMaxPageNumOnPage(newMaxPageNum);\n        setPages(newPagesList); // render when pages is set\n    }, [numSet, idList])\n\n    return (\n        <div className=\"pagenav-container\">\n            <ul>\n                <li><button className=\"page-btn\" onClick={prevSet}>\n                    {\"<<\"}\n                </button></li>\n                <li><button className=\"page-btn\" onClick={prevPage}>\n                    {\"<\"}\n                </button></li>\n                {pages.map((index) => {\n                    return (\n                        <li key={index}>\n                            <button className={index == currentPage ? \"page-btn active\" : \"page-btn\"} onClick={getPage}>\n                                {index}\n                            </button>\n                        </li>\n                    )\n                })}\n                <li><button className=\"page-btn\" onClick={nextPage}>\n                    {\">\"}\n                </button></li>\n                <li><button className=\"page-btn\" onClick={nextSet}>\n                    {\">>\"}\n                </button></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default PageNav\n","import React from 'react'\nimport Search from '../components/Search'\nimport PokeInfo from '../components/PokeInfo'\nimport Filter from '../components/Filter'\nimport PageNav from '../components/PageNav'\n\nconst Pokedex = () => {\n\treturn (\n\t\t<>\n\t\t\t<Search />\n\t\t\t<Filter />\n\t\t\t<PageNav />\n\t\t\t<PokeInfo />\n\t\t</>\n\t)\n}\n\nexport default Pokedex\n","import React from 'react'\n\nconst TypeChart = () => {\n\treturn (\n\t\t<>\n\t\t\tWork in progress\n\t\t</>\n\t)\n}\n\nexport default TypeChart\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Sidebar = () => {\n\treturn (\n\t\t<nav className=\"sidebar\">\n\t\t\t<div className=\"sidebar-logo\">\n\t\t\t\t<img alt=\"pikachu\" src=\"../pika.png\"/>\n\t\t\t</div>\n\t  \t\t<ul className=\"nav-links\">\n\t  \t\t\t<li>\n\t  \t\t\t\t<NavLink to=\"/\" exact activeStyle={{textDecoration: \"underline\"}}>Home</NavLink>\n\t  \t\t\t</li>\n\t\t\t\t<li>\n\t  \t\t\t\t<NavLink to=\"/pokedex/\" exact activeStyle={{textDecoration: \"underline\"}}>Pokedex</NavLink>\n\t  \t\t\t</li>\n\t  \t\t\t<li>\n\t  \t\t\t\t<NavLink to=\"/typechart\" exact activeStyle={{textDecoration: \"underline\"}}>Type Chart</NavLink>\n\t  \t\t\t</li>\n\t  \t\t</ul>\n\t\t</nav>\n\t)\n}\n\nexport default Sidebar\n","import React, {useState, useEffect} from 'react'\nimport { useGlobalContext } from '../context'\nimport { useParams } from 'react-router-dom'\n\nimport { typeData } from '../data'\nimport Loading from '../components/Loading'\nconst url = \"https://pokeapi.co/api/v2/\"\n\nconst SinglePokemon = () => {\n\tconst {name} = useParams();\n\tconst {capitilize, setLoading, loading} = useGlobalContext();\n\tconst [flavorTexts, setFlavorTexts] = useState(\"\");\n\tconst [pokemonInfo, setPokemonInfo] = useState([]);\n\n\tasync function getPokemon() {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst response = await fetch(`${url}pokemon/${name}/`)\n\t\t\tconst data = await response.json();\n\t\t\tsetPokemonInfo({abilities:data.abilities, name:data.name, id:data.id, height:data.height, weight:data.weight, types:data.types, image:data.sprites.front_default, species:data.species.url})\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetPokemon();\n\t}, [name])\n\n\t// fetch the flavortext (description) of the Pokemon\n\t// requires another fetch because flavortext is in another URL\n\tconst fetchFlavorText = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(pokemonInfo.species);\n\t\t\tconst data = await response.json();\n\t\t\tsetFlavorTexts(data.flavor_text_entries);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchFlavorText();\n\t}, [pokemonInfo])\n\n\tconst getFlavorText = (list) => {\n\t\tif (!list) return \"\";\n\t\tlet index = 15;\n\t\twhile (list[index].language.name !== \"en\") {\n\t\t\tindex--;\n\t\t}\n\t\treturn list[index].flavor_text;\n\t}\n\n\tif (loading) {\n\t\treturn <Loading />\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"pokeinfo-container\">\n\t\t\t\t<div className=\"pokeinfo-top-container\">\n\t\t\t\t\t{pokemonInfo.name?capitilize(pokemonInfo.name):\"\"} #{ pokemonInfo.id}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pokeinfo-middle-container\">\n\t\t\t\t\t<div className=\"pokeinfo-image-container\">\n\t\t\t\t\t\t<img src={pokemonInfo.image} alt=\"poke-img\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"pokeinfo-stats-container\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Height: {pokemonInfo.height/10} m</li>\n\t\t\t\t\t\t\t<li>Weight: {pokemonInfo.weight/10} kg</li>\n\t\t\t\t\t\t\t<li>Abilities: &nbsp;{\n\t\t\t\t\t\t\t\t\tpokemonInfo.abilities ?\n\t\t\t\t\t\t\t\t\tpokemonInfo.abilities.map((ability, index) => {\n\t\t\t\t\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t\t\t\t\tindex > 0 && \", \",\n\t\t\t\t\t\t\t\t\t\t\t<a key={index} href=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t{capitilize(ability.ability.name)}&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}):\"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>Type(s): {\n\t\t\t\t\t\t\t\tpokemonInfo.types ?\n\t\t\t\t\t\t\t\tpokemonInfo.types.map((type, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"type-box\" style={{backgroundColor:`${typeData[type.type.name]}`}}>\n\t\t\t\t\t\t\t\t\t\t\t{capitilize(type.type.name)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}):\"\"\n\t\t\t\t\t\t\t}</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pokeinfo-bottom-container\">\n\t\t\t\t\t<p>{getFlavorText(flavorTexts)}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default SinglePokemon\n","import React from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport {HashRouter} from 'react-router-dom'\n// pages\nimport Home from './pages/Home'\nimport Pokedex from './pages/Pokedex'\nimport TypeChart from './pages/TypeChart'\n// components\nimport Sidebar from './components/Sidebar'\nimport SinglePokemonPage from './components/SinglePokemonPage'\n\nfunction App() {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Sidebar />\n\t\t\t<div className=\"main-container\">\n\t\t\t\t<div className=\"inner-container\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/pokedex/\">\n\t\t\t\t\t\t\t<Pokedex />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/pokedex/:name\">\n\t\t\t\t\t\t\t<SinglePokemonPage/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/typechart\">\n\t\t\t\t\t\t\t<TypeChart />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './base.css'\nimport './index.css'\nimport {AppProvider} from './context'\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<AppProvider>\n\t\t\t\t<App />\n\t\t\t</AppProvider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}